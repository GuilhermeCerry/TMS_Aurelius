unit OracleConnectionModule;

interface

uses
  Aurelius.Drivers.Interfaces,
  Aurelius.Drivers.FireDac,
  FireDAC.Dapt,
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  Aurelius.Sql.Oracle, Aurelius.Schema.Oracle, Aurelius.Comp.Connection,
  Data.DB, FireDAC.Comp.Client, FireDAC.Phys.TDBX, FireDAC.Phys.TDBXDef;

type
  TFireDacOracleConnection = class(TDataModule)
    Connection: TFDConnection;
    AureliusConnectionOracle: TAureliusConnection;
  private
  public
    class function CreateConnection: IDBConnection;
    class function CreateFactory: IDBConnectionFactory;

  end;

var
  FireDacOracleConnection: TFireDacOracleConnection;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

uses 
  Aurelius.Drivers.Base;

{$R *.dfm}

class function TFireDacOracleConnection.CreateConnection: IDBConnection;
begin
  Result := FireDacOracleConnection.AureliusConnectionOracle.CreateConnection;
end;

class function TFireDacOracleConnection.CreateFactory: IDBConnectionFactory;
begin
  Result := TDBConnectionFactory.Create(
    function: IDBConnection
    begin
      Result := CreateConnection;
    end
  );
end;



end.
